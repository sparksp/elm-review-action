name: "build-test"
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - master
      - 'releases/*'

jobs:
  build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: yarn
    - run: yarn run all

  test: # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.head_ref }}
    - run: yarn --frozen-lockfile
    - name: Build elm-review
      run: |
        npm ci
        npm run build
      working-directory: ./node_modules/elm-review
    - name: Add elm-review, elm and elm-format to path
      run: echo ::add-path::$(yarn bin)
    - name: Run elm-review
      uses: ./
      with:
        # elm_review: elm-review
        elm_json: __tests__/elm/elm.json
        elm_files: __tests__/elm/src/Good.elm
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Apply elm-review fixes
      run: elm-review __tests__/elm/src/Good.elm --elmjson __tests__/elm/elm.json --fix-all-without-prompt
      continue-on-error: true
    - name: Checkout new fixes branch
      if: ${{ github.event_name == 'pull_request' }}
      run: git checkout -b fixes/${{ github.head_ref }}
    - uses: stefanzweifel/git-auto-commit-action@v4
      if: ${{ github.event_name == 'pull_request' }}
      id: docs-commit
      with:
        branch: fixes/${{ github.head_ref }}
        commit_message: Apply elm-review fixes
        push_options: --force
      env:
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - uses: repo-sync/pull-request@v2
      if: ${{ steps.docs-commit.outputs.changes_detected == 'true' }}
      with:
        source_branch: fixes/${{ github.head_ref }}
        destination_branch: ${{ github.head_ref }}
        pr_title: "elm-review fixes"
        pr_body: "*This is an automated pull request with fixes from your elm-review rules.*"
        pr_reviewer: sparksp
        pr_assignee: sparksp
        github_token: ${{ secrets.GITHUB_TOKEN }}
